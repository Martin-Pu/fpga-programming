# The Problem
A while back, I developed a Fan Control Board for my Computer, which would control the Fan- and Pump-speed via the water-cooling-loop's temperature.
For the control a Micro Controller was used, but due to the high number of necessary IO Ports (and IO Functions like PWM and interrupts) the choice of Micro Controller was strongly limited. 
An ESP32 was chosen, due to the embedded Bluetooth capability for software access and the relatively high IO count.
Still the IO-Pins (and PWM-Channels) ended up not being enough (10x Fans with PWM and Tach Signal, 2x Pumps, Sensors, and so on). Status indication could also not be implemented.

Using an FPGA gives access to one of its big advantages: A large number of IO-Pins 

The main challenge of the project is the implementation of a Temperature Readout from an external Temperature Sensor.
For this a SPI interface has to be programmed to an ADC. The received value of the ADC which represents Temperature, is not in the correct format yet and has to be converted to Temperature via multiple conversion.
This circuit has to be calibrated to account for Resistor tolerances. 
At last a simple control algorithm has to be programmed, which outputs a PWM Signal based on Temperature to Control Fans or Pumps.